---
title: "Lab 1"
date: "January 23, 2017"
output: word_document
---

```{r answers,echo = F}
## Loads the knitr package (make sure you have this installed)
library(knitr)
```
## Instructions ##

First, if you haven't done so already, find a group. Pairs are probably best but, if you want to work in groups of 3 or 4, that is find.  I recommend no more than four people in a group.

The next step is to make sure that you have installed R, and then R Studio on the computer where you will be doing your work this class this semester.  You will likely have fewer problems if you use the same computer for all your work, inside and outside class sessions.

In the Source panel of RStudio, create a new R script file called "lab1.R". You will type commands and comments in that file so that you remember what you did today. Although you should feel free to type commands interactively in the R Console as you explore R and the data, you'll find this record of your work useful when you later begin to work on analysis of your own datasets.

This week, we will start downloading, importing them into R dataframes, and analyzing them.

You should add your answers for the questions below to your R script file.  Make sure that you clearly number your answers, and include a blank line between answers to different questions.

When you have added all your answers to the script file, use the "knit" command to produce a printed copy of your homework to turn in through Moodle.  This printed copy is due at the start of the next class session.  Submitting it more than 10 minutes after the start of class will result in a late penalty.

## Questions ##

1. In order to use R to search for and download tweets, the first step is to set your working directory, and then load several libraries which contain functions and commands that you will use for your analysis.  Copy and paste the R script lines below into your own script file, and run the file to make sure that it works.  If a library is not installed on your computer, you will need to install the package for that library.  In the subwindow in the lower right corner of your R windown, Click on the "Packages" tab.  Then, click on the "Install" button at the top of the subwindow.  When a new window appears, type the name of the package that you wish to install (which is usually the same name as the library you need).  Then, click "Install".  After you install the relevant package on your computer, the library command should work.
\vspace{2cm}
    ```{r q1, echo = T, eval = F}
    setwd("C:/Users/pasellers/Dropbox (Davidson College)/VP/POL 201")
    library(dplyr)
    library(purrr)
    library(twitteR)
    library(httr)
    ```
2. Next, you need to set a series of values and codes within R, which will allow you to use the twitteR library to access Twitter and tweets (these commands create an API, or application program interface).  Copy and paste the script below into your own script file, and run the file to make sure that it works.  As the last line runs ("setup_twitter_...."), R may ask you whether to use "direct authentication"; agree to do this.  In lines below, you will note versions 1 and 2 of codes required to access twitter.  Each version accesses Twitter in a different way.  Twitter limits the number of times one version can access tweets during a specified period.  If too many people use one version at the same time, Twitter will shut down access (via that version) for a while.  So if you try to access tweets with one version and get an error, try switching to another version to access the tweets (by removing hashtags in front of one version's codes, and adding hashtags in front of the other version's codes).  If that different version doesn't work, wait five minutes, and try again.
\vspace{2cm}
    ```{r q2, echo = T, eval = F}
    # You need to set global options with an authenticated app
    # Version 1
    #consumer_key <- "3gNiCgdCyu7gatTRIYsajJQV1"
    #consumer_secret <- "Gg5IP5Wzivoirf1IMZoavkNvgJNcZUsn41KUYU2tQ4e46cHlp1"
    #access_token <- "85328440-s8b0oNa8kYhELdkYBDdZvfrnWRs8IbQjwqYToARcj"
    #access_secret <- "hQSujkBdtEYG5KUTvsbG2bPuQeaSOIYzLlSKZnYzI67oe"
    #setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
    # Version 2
    consumer_key <- "1yS3pkFjzrZJbUwNOdKu71kvt"
    consumer_secret <- "gyFmBSUFP9qlPxOdBiRpvAdM4Kf3vLAyBLfk3zjNNiskWI892F"
    access_token <- "85328440-eb6NmIiFAsRr9MuryU3xS0btmu3piakDlWy0ILBps"
    access_secret <- "HGzeGoY8tncp52ZFfUsaBcj9GOh6tQea7q9vZeZaLYIME"
    setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
    ```
3. You are now ready to search for and download tweets!  We will first search for tweets by username.  A widely-known username is @realDonaldTrump.  Add the commands below to your script file, and run it. 
\vspace{2cm}
    ```{r q3, echo = T, eval = F}
    # Search for the tweets, and load them into R as values
    tweets_trump <- userTimeline("realDonaldTrump", n = 100)
    # Pull the values into a dataframe
    tweets_trump.df <- tbl_df(map_df(tweets_trump, as.data.frame))
    ```
4. How many observations are in the new dataframe?  How many variables?
\vspace{2cm}
    ```{r q4, echo = F, eval = F}
    # The new dataframe contains 100 observations and 16 variables.  In 
    # the subwindow in the upper left corner of the R window, look at the 
    # "Environment" tab, and find the line for "tweets_trump.df".  You 
    # can find the observations and variables on this line.
    ```
5. What is the average number of favorites for these 100 tweets?
\vspace{2cm}
    ```{r q5, echo = F, eval = F}
    mean(tweets_trump.df$favoriteCount)
    ```
6. Print the tweet that was retweeted the most.  How many times was it retweeted?  (**Hint:** First try to print all the tweets, using the print command.  Then, add an argument to that command, directing R to include only rows of the dataframe where the retweet count (i.e., retweetCount) is equal to the maximum of the retweet count (i.e., max(tweets_trump.df$retweetCount))).
\vspace{2cm}
    ```{r q6, echo = F, eval = F}
    print(tweets_trump.df$text[tweets_trump.df$retweetCount == 
        max(tweets_trump.df$retweetCount)])
    print(tweets_trump.df$retweetCount[tweets_trump.df$retweetCount == 
        max(tweets_trump.df$retweetCount)])
    ```
7. Now we will search for tweets based on their content.  Copy and paste the following R code into your script file.  Look at the results (in the dataframe tweets.df), and explain exactly what the search criteria were looking for.  **Hint:** Look up the function "searchTwitter" to understand the different arguments in the script.
\vspace{2cm}
    ```{r q7, echo = T, eval = F}
    # Search for tweets fitting search criteria, and load them into R as
    # values.
    tweets <- searchTwitter("Obamacare AND (ACA OR 'Affordable Care Act' OR #ACA)", 
            n = 600, lang = "en", since = "2014-08-20", 
            resultType = "recent", retryOnRateLimit = 4)
    # Pull the values into a dataframe
    tweets.df <- twListToDF(tweets)
    View(tweets.df)
    ```
    ```{r q7a, echo = F, eval = F}
    #
    # The search criteria told R to find the 6 most recent tweets since 
    # 8/20/2014 that mentioned "Obamacare" and either "ACA" or 
    # "Affordable Care Act" or "#ACA".  The final search term was 
    # redundant since we were already looking for "ACA".  
    # 
    # The search criteria also directed R to retry the search four times 
    # if the search ran up against Twitter's limit of 3200 tweets to 
    # download at once.  This retrying isn't relevant for a search for 6 
    # tweets, but would be relevant for a search for 6,000 tweets.
    ```
8. As a different search, select 8 tweets since 8/20/14 that meet the same criteria for content (i.e., mention "Obamacare" and the other phrases in the previous search), and that are the most popular.  Of the 8 most popular tweets, how often was each one retweeted?
\vspace{2cm}
    ```{r q8, echo = F, eval = F}
    # Search for tweets fitting search criteria, and load them into R 
    # as values
    tweets <- searchTwitter("Obamacare AND (ACA OR 'Affordable Care Act' OR #ACA)", 
            n = 8, lang="en", since="2014-08-20", 
            resultType="popular", retryOnRateLimit=4)
    # Pull the values into a dataframe
    tweets.df <- twListToDF(tweets)
    (tweets.df$retweetCount)
    ```
